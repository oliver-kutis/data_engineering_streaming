services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.8.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://${KAFKA_ADDRESS:-localhost}:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"

  # kafka-tools:
  #   image: confluentinc/cp-kafka:7.8.0
  #   hostname: kafka-tools
  #   container_name: kafka-tools
  #   depends_on:
  #     - broker
  # entrypoint: [
  #     "/bin/sh",
  #     "-c",
  #     " \
  #     kafka-topics --create --topic auth_events --bootstrap-server broker:9092 --partitions 1 --replication-factor 1 && \
  #     kafka-topics --create --topic listen_events --bootstrap-server broker:9092 --partitions 1 --replication-factor 1 && \
  #     kafka-topics --create --topic page_view_events --bootstrap-server broker:9092 --partitions 1 --replication-factor 1 && \
  #     kafka-topics --create --topic status_change_events --bootstrap-server broker:9092 --partitions 1 --replication-factor 1 && \
  #     tail -f /dev/null \
  #     ",
  #   ]
  kafka-tools:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka-tools
    container_name: kafka-tools
    command: ["tail", "-f", "/dev/null"]
    # network_mode: "host"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.8.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.8.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
      CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  eventsim:
    build:
      context: eventsim/.
      dockerfile: Dockerfile
    depends_on:
      - broker
    hostname: eventsim
    container_name: eventsim
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 6G
  # command: >
  #   ./bin/eventsim -c examples/example-config.json \
  #   --start-time "$(date +%Y-%m-%dT%H:%M:%S)" \
  #   --end-time "$(date -v '+1d' +%Y-%m-%dT%H:%M %S)" \
  #   --nusers 200000 \
  #   --growth-rate 10 \
  #   --randomseed 123 \
  #   --kafkaBrokerList localhost:9092 \
  #   --continuous

  # create-topics:
  #   image: confluentinc/cp-kafka:7.8.0
  #   depends_on:
  #     - broker
  #   entrypoint: [
  #       "bin/sh",
  #       "-c",
  #       " \
  #       kafka-topics --create --topic auth_events --bootstrap-server broker:9092 --partitions 1 --replication-factor 1 && \
  #       kafka-topics --create --topic listen_events --bootstrap-server broker:9092 --partitions 1 --replication-factor 1 && \
  #       kafka-topics --create --topic page_view_events --bootstrap-server broker:9092 --partitions 1 --replication-factor 1 && \
  #       kafka-topics --create --topic status_change_events --bootstrap-server broker:9092 --partitions 1 --replication-factor 1 \
  #       ",
  #     ]
